# Урок 1. Введение в алгоритмизацию и реализация простых алгоритмов на Python
# 7. По длинам трех отрезков, введенных пользователем, определить возможность существования треугольника,
# составленного из этих отрезков. Если такой треугольник существует, то определить,
# является ли он разносторонним, равнобедренным или равносторонним.

def check_triangle(x, y, z):
    # неравенство треугольника: сумма длин двух любых сторон треугольника строго больше длины третьей.
    if x > (y + z) or y > (x + z) or z > (x + y):
        print('Треугольник с такими отрезками не существует.')
    # равносторонний?
    elif x == y == z:
        print('Треугольник равносторонний')
    # равнобедренный?
    elif x == y or y == z or x == z:
        print('Треугольник равнобедренный')
    else:
        print('Треугольник разносторонний')


def main():
    print('Определение треугольника по трем отрезкам')
    length_a = input('Введите длину первого отрезка: ')
    length_b = input('Введите длину второго отрезка: ')
    length_c = input('Введите длину третьего отрезка: ')
    try:
        length_a, length_b, length_c = float(length_a), float(length_b), float(length_c)
        check_triangle(length_a, length_b, length_c)
    except ValueError:
        print('Необходимо ввести числовые значения!')
    #


if __name__ == '__main__':
    main()
#
